{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\38095\\\\Desktop\\\\MERN-cloud-disk-4523999939031cf4fe6202680e7a26163cdd92e8\\\\client\\\\src\\\\components\\\\disk\\\\Disk.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createDir, getFiles, uploadFile } from \"../../actions/file\";\nimport FileList from \"./fileList/FileList\";\nimport './disk.css';\nimport Popup from \"./Popup\";\nimport { setCurrentDir, setFileView, setPopupDisplay } from \"../../reducers/fileReducer\";\nimport Uploader from \"./uploader/Uploader\";\n\nconst Disk = () => {\n  const dispatch = useDispatch();\n  const currentDir = useSelector(state => state.files.currentDir);\n  const loader = useSelector(state => state.app.loader);\n  const dirStack = useSelector(state => state.files.dirStack);\n  const [dragEnter, setDragEnter] = useState(false);\n  const [sort, setSort] = useState('type');\n  useEffect(() => {\n    dispatch(getFiles(currentDir, sort));\n  }, [currentDir, sort]);\n\n  function showPopupHandler() {\n    dispatch(setPopupDisplay('flex'));\n  }\n\n  function backClickHandler() {\n    const backDirId = dirStack.pop();\n    dispatch(setCurrentDir(backDirId));\n  }\n\n  function fileUploadHandler(event) {\n    const files = [...event.target.files];\n    files.forEach(file => dispatch(uploadFile(file, currentDir)));\n  }\n\n  function dragEnterHandler(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    setDragEnter(true);\n  }\n\n  function dragLeaveHandler(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    setDragEnter(false);\n  }\n\n  function dropHandler(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    let files = [...event.dataTransfer.files];\n    files.forEach(file => dispatch(uploadFile(file, currentDir)));\n    setDragEnter(false);\n  }\n\n  if (loader) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lds-dual-ring\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return !dragEnter ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"disk\",\n    onDragEnter: dragEnterHandler,\n    onDragLeave: dragLeaveHandler,\n    onDragOver: dragEnterHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"disk__btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"disk__back\",\n    onClick: () => backClickHandler(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"\\u041D\\u0430\\u0437\\u0430\\u0434\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"disk__create\",\n    onClick: () => showPopupHandler(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"\\u0421\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0438 \\u043F\\u0430\\u043F\\u043A\\u0443\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"disk__upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"disk__upload-input\",\n    className: \"disk__upload-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0438\\u0442\\u0438 \\u0444\\u0430\\u0439\\u043B\"), /*#__PURE__*/React.createElement(\"input\", {\n    multiple: true,\n    onChange: event => fileUploadHandler(event),\n    type: \"file\",\n    id: \"disk__upload-input\",\n    className: \"disk__upload-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"select\", {\n    value: sort,\n    onChange: e => setSort(e.target.value),\n    className: \"disk__select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"\\u041F\\u043E \\u043D\\u0430\\u0437\\u0432\\u0456\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"\\u041F\\u043E \\u0442\\u0438\\u043F\\u0443\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"\\u041F\\u043E \\u0434\\u0430\\u0442\\u0456\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"disk__plate\",\n    onClick: () => dispatch(setFileView('plate')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"disk__list\",\n    onClick: () => dispatch(setFileView('list')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FileList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Uploader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drop-area\",\n    onDrop: dropHandler,\n    onDragEnter: dragEnterHandler,\n    onDragLeave: dragLeaveHandler,\n    onDragOver: dragEnterHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"\\u041F\\u0435\\u0440\\u0435\\u0442\\u044F\\u043D\\u0456\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\\u0438 \\u0441\\u044E\\u0434\\u0430\");\n};\n\nexport default Disk;","map":{"version":3,"sources":["C:/Users/38095/Desktop/MERN-cloud-disk-4523999939031cf4fe6202680e7a26163cdd92e8/client/src/components/disk/Disk.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","createDir","getFiles","uploadFile","FileList","Popup","setCurrentDir","setFileView","setPopupDisplay","Uploader","Disk","dispatch","currentDir","state","files","loader","app","dirStack","dragEnter","setDragEnter","sort","setSort","showPopupHandler","backClickHandler","backDirId","pop","fileUploadHandler","event","target","forEach","file","dragEnterHandler","preventDefault","stopPropagation","dragLeaveHandler","dropHandler","dataTransfer","e","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {createDir, getFiles, uploadFile} from \"../../actions/file\";\nimport FileList from \"./fileList/FileList\";\nimport './disk.css'\nimport Popup from \"./Popup\";\nimport {setCurrentDir, setFileView, setPopupDisplay} from \"../../reducers/fileReducer\";\nimport Uploader from \"./uploader/Uploader\";\n\nconst Disk = () => {\n    const dispatch = useDispatch()\n    const currentDir = useSelector(state => state.files.currentDir)\n    const loader = useSelector(state => state.app.loader)\n    const dirStack = useSelector(state => state.files.dirStack)\n    const [dragEnter, setDragEnter] = useState(false)\n    const [sort, setSort] = useState('type')\n\n    useEffect(() => {\n        dispatch(getFiles(currentDir, sort))\n    }, [currentDir, sort])\n\n    function showPopupHandler() {\n        dispatch(setPopupDisplay('flex'))\n    }\n\n    function backClickHandler() {\n        const backDirId = dirStack.pop()\n        dispatch(setCurrentDir(backDirId))\n    }\n\n    function fileUploadHandler(event) {\n        const files = [...event.target.files]\n        files.forEach(file => dispatch(uploadFile(file, currentDir)))\n    }\n\n    function dragEnterHandler(event) {\n        event.preventDefault()\n        event.stopPropagation()\n        setDragEnter(true)\n    }\n\n    function dragLeaveHandler(event) {\n        event.preventDefault()\n        event.stopPropagation()\n        setDragEnter(false)\n    }\n\n    function dropHandler(event) {\n        event.preventDefault()\n        event.stopPropagation()\n        let files = [...event.dataTransfer.files]\n        files.forEach(file => dispatch(uploadFile(file, currentDir)))\n        setDragEnter(false)\n    }\n\n    if(loader) {\n        return (\n            <div className=\"loader\">\n                <div className=\"lds-dual-ring\"></div>\n            </div>\n        )\n    }\n\n    return ( !dragEnter ?\n            <div className=\"disk\" onDragEnter={dragEnterHandler} onDragLeave={dragLeaveHandler} onDragOver={dragEnterHandler}>\n                <div className=\"disk__btns\">\n                    <button className=\"disk__back\" onClick={() => backClickHandler()}>Назад</button>\n                    <button className=\"disk__create\" onClick={() => showPopupHandler()}>Створити папку</button>\n                    <div className=\"disk__upload\">\n                        <label htmlFor=\"disk__upload-input\" className=\"disk__upload-label\">Завантажити файл</label>\n                        <input multiple={true} onChange={(event)=> fileUploadHandler(event)} type=\"file\" id=\"disk__upload-input\" className=\"disk__upload-input\"/>\n                    </div>\n                    <select value={sort}\n                            onChange={(e) => setSort(e.target.value)}\n                            className='disk__select'>\n                        <option value=\"name\">По назві</option>\n                        <option value=\"type\">По типу</option>\n                        <option value=\"date\">По даті</option>\n                    </select>\n                    <button className=\"disk__plate\" onClick={() => dispatch(setFileView('plate'))}/>\n                    <button className=\"disk__list\" onClick={() => dispatch(setFileView('list'))}/>\n                </div>\n                <FileList/>\n                <Popup/>\n                <Uploader/>\n            </div>\n            :\n            <div className=\"drop-area\" onDrop={dropHandler} onDragEnter={dragEnterHandler} onDragLeave={dragLeaveHandler} onDragOver={dragEnterHandler}>\n                Перетяніть файли сюда\n            </div>\n    );\n};\n\nexport default Disk;\n"]},"metadata":{},"sourceType":"module"}