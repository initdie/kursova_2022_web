{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\38095\\\\Desktop\\\\MERN-cloud-disk-4523999939031cf4fe6202680e7a26163cdd92e8\\\\client\\\\src\\\\components\\\\disk\\\\fileList\\\\file\\\\File.jsx\";\nimport React from 'react';\nimport './file.css';\nimport dirLogo from \"../../../../assets/img/dir.svg\";\nimport fileLogo from \"../../../../assets/img/file.svg\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { pushToStack, setCurrentDir } from \"../../../../reducers/fileReducer\";\nimport { deleteFile, downloadFile } from \"../../../../actions/file\";\nimport sizeFormat from \"../../../../utils/sizeFormat\";\n\nconst File = ({\n  file\n}) => {\n  const dispatch = useDispatch();\n  const currentDir = useSelector(state => state.files.currentDir);\n  const fileView = useSelector(state => state.files.view);\n\n  function openDirHandler(file) {\n    if (file.type === 'dir') {\n      dispatch(pushToStack(currentDir));\n      dispatch(setCurrentDir(file._id));\n    }\n  }\n\n  function downloadClickHandler(e) {\n    e.stopPropagation();\n    downloadFile(file);\n  }\n\n  function deleteClickHandler(e) {\n    e.stopPropagation();\n    dispatch(deleteFile(file));\n  }\n\n  if (fileView === 'list') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file\",\n      onClick: () => openDirHandler(file),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: file.type === 'dir' ? dirLogo : fileLogo,\n      alt: \"\",\n      className: \"file__img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file__name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, file.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file__date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, file.date.slice(0, 10)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file__size\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, sizeFormat(file.size)), file.type !== 'dir' && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => downloadClickHandler(e),\n      className: \"file__btn file__download\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"download\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => deleteClickHandler(e),\n      className: \"file__btn file__delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, \"delete\"));\n  }\n\n  if (fileView === 'plate') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-plate\",\n      onClick: () => openDirHandler(file),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: file.type === 'dir' ? dirLogo : fileLogo,\n      alt: \"\",\n      className: \"file-plate__img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-plate__name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, file.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-plate__btns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, file.type !== 'dir' && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => downloadClickHandler(e),\n      className: \"file-plate__btn file-plate__download\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, \"download\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => deleteClickHandler(e),\n      className: \"file-plate__btn file-plate__delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"delete\")));\n  }\n};\n\nexport default File;","map":{"version":3,"sources":["C:/Users/38095/Desktop/MERN-cloud-disk-4523999939031cf4fe6202680e7a26163cdd92e8/client/src/components/disk/fileList/file/File.jsx"],"names":["React","useDispatch","useSelector","pushToStack","setCurrentDir","deleteFile","downloadFile","sizeFormat","File","file","dispatch","currentDir","state","files","fileView","view","openDirHandler","type","_id","downloadClickHandler","e","stopPropagation","deleteClickHandler","dirLogo","fileLogo","name","date","slice","size"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;;AAGA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,WAAR,EAAqBC,aAArB,QAAyC,kCAAzC;AACA,SAAQC,UAAR,EAAoBC,YAApB,QAAuC,0BAAvC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AACA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AACrB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,UAAU,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYF,UAAtB,CAA9B;AACA,QAAMG,QAAQ,GAAGZ,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,IAAtB,CAA5B;;AAEA,WAASC,cAAT,CAAwBP,IAAxB,EAA8B;AAC1B,QAAGA,IAAI,CAACQ,IAAL,KAAc,KAAjB,EAAwB;AACpBP,MAAAA,QAAQ,CAACP,WAAW,CAACQ,UAAD,CAAZ,CAAR;AACAD,MAAAA,QAAQ,CAACN,aAAa,CAACK,IAAI,CAACS,GAAN,CAAd,CAAR;AACH;AACJ;;AAED,WAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAC7BA,IAAAA,CAAC,CAACC,eAAF;AACAf,IAAAA,YAAY,CAACG,IAAD,CAAZ;AACH;;AAED,WAASa,kBAAT,CAA4BF,CAA5B,EAA+B;AAC3BA,IAAAA,CAAC,CAACC,eAAF;AACAX,IAAAA,QAAQ,CAACL,UAAU,CAACI,IAAD,CAAX,CAAR;AACH;;AAED,MAAIK,QAAQ,KAAK,MAAjB,EAAyB;AACrB,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,OAAO,EAAE,MAAME,cAAc,CAACP,IAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACQ,IAAL,KAAc,KAAd,GAAsBM,OAAtB,GAAgCC,QAA1C;AAAoD,MAAA,GAAG,EAAC,EAAxD;AAA2D,MAAA,SAAS,EAAC,WAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6Bf,IAAI,CAACgB,IAAlC,CAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BhB,IAAI,CAACiB,IAAL,CAAUC,KAAV,CAAgB,CAAhB,EAAmB,EAAnB,CAA7B,CAHJ,eAII;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BpB,UAAU,CAACE,IAAI,CAACmB,IAAN,CAAvC,CAJJ,EAKKnB,IAAI,CAACQ,IAAL,KAAc,KAAd,iBACD;AAAQ,MAAA,OAAO,EAAGG,CAAD,IAAOD,oBAAoB,CAACC,CAAD,CAA5C;AAAiD,MAAA,SAAS,EAAC,0BAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAQ,MAAA,OAAO,EAAGA,CAAD,IAAOE,kBAAkB,CAACF,CAAD,CAA1C;AAA+C,MAAA,SAAS,EAAC,wBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,CADJ;AAWH;;AACD,MAAIN,QAAQ,KAAK,OAAjB,EAA0B;AACtB,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,OAAO,EAAE,MAAME,cAAc,CAACP,IAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACQ,IAAL,KAAc,KAAd,GAAsBM,OAAtB,GAAgCC,QAA1C;AAAoD,MAAA,GAAG,EAAC,EAAxD;AAA2D,MAAA,SAAS,EAAC,iBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCf,IAAI,CAACgB,IAAxC,CAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKhB,IAAI,CAACQ,IAAL,KAAc,KAAd,iBACD;AAAQ,MAAA,OAAO,EAAGG,CAAD,IAAOD,oBAAoB,CAACC,CAAD,CAA5C;AAAiD,MAAA,SAAS,EAAC,sCAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,MAAA,OAAO,EAAGA,CAAD,IAAOE,kBAAkB,CAACF,CAAD,CAA1C;AAA+C,MAAA,SAAS,EAAC,oCAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CAHJ,CADJ;AAWH;AAEJ,CAjDD;;AAmDA,eAAeZ,IAAf","sourcesContent":["import React from 'react';\nimport './file.css'\nimport dirLogo from '../../../../assets/img/dir.svg'\nimport fileLogo from '../../../../assets/img/file.svg'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {pushToStack, setCurrentDir} from \"../../../../reducers/fileReducer\";\nimport {deleteFile, downloadFile} from \"../../../../actions/file\";\nimport sizeFormat from \"../../../../utils/sizeFormat\";\nconst File = ({file}) => {\n    const dispatch = useDispatch()\n    const currentDir = useSelector(state => state.files.currentDir)\n    const fileView = useSelector(state => state.files.view)\n\n    function openDirHandler(file) {\n        if(file.type === 'dir') {\n            dispatch(pushToStack(currentDir))\n            dispatch(setCurrentDir(file._id))\n        }\n    }\n\n    function downloadClickHandler(e) {\n        e.stopPropagation()\n        downloadFile(file)\n    }\n\n    function deleteClickHandler(e) {\n        e.stopPropagation()\n        dispatch(deleteFile(file))\n    }\n\n    if (fileView === 'list') {\n        return (\n            <div className='file' onClick={() => openDirHandler(file)}>\n                <img src={file.type === 'dir' ? dirLogo : fileLogo} alt=\"\" className=\"file__img\"/>\n                <div className=\"file__name\">{file.name}</div>\n                <div className=\"file__date\">{file.date.slice(0, 10)}</div>\n                <div className=\"file__size\">{sizeFormat(file.size)}</div>\n                {file.type !== 'dir' &&\n                <button onClick={(e) => downloadClickHandler(e)} className=\"file__btn file__download\">download</button>}\n                <button onClick={(e) => deleteClickHandler(e)} className=\"file__btn file__delete\">delete</button>\n            </div>\n        );\n    }\n    if (fileView === 'plate') {\n        return (\n            <div className='file-plate' onClick={() => openDirHandler(file)}>\n                <img src={file.type === 'dir' ? dirLogo : fileLogo} alt=\"\" className=\"file-plate__img\"/>\n                <div className=\"file-plate__name\">{file.name}</div>\n                <div className=\"file-plate__btns\">\n                    {file.type !== 'dir' &&\n                    <button onClick={(e) => downloadClickHandler(e)} className=\"file-plate__btn file-plate__download\">download</button>}\n                    <button onClick={(e) => deleteClickHandler(e)} className=\"file-plate__btn file-plate__delete\">delete</button>\n                </div>\n            </div>\n        );\n    }\n\n};\n\nexport default File;\n"]},"metadata":{},"sourceType":"module"}